import { FC } from 'react';
import { IconVariants } from '@app/enums';
import { ISvg } from '@app/types';

enum filesFill {
  add = '#4778EC',
  delete = '#4778EC',
  edit = '#4778EC',
  zoom = '#4778EC',
}

const getColor = (icon: IconVariants): string => {
  return filesFill[icon];
};

const files: {
  [key: string]: {
    width: number;
    height: number;
    viewBox: number[];
    fill: string;
    stroke?: string;
    data: JSX.Element;
  };
} = {
  add: {
    width: 90,
    height: 90,
    viewBox: [0, 0, 90, 90],
    fill: getColor(IconVariants.add),
    data: (
      <>
        <rect
          xmlns="http://www.w3.org/2000/svg"
          width="87"
          height="87"
          x="1.5"
          y="1.5"
          stroke={getColor(IconVariants.add)}
          strokeWidth="3"
          rx="16.5"
        />
        <path
          xmlns="http://www.w3.org/2000/svg"
          d="M59.789 48.8H48.461V60H41.613V48.8H30.285V42.4H41.613V31.2H48.461V42.4H59.789V48.8Z"
        />
      </>
    ),
  },
  delete: {
    width: 20,
    height: 26,
    viewBox: [0, 0, 20, 26],
    fill: getColor(IconVariants.delete),
    data: (
      <>
        <path
          xmlns="http://www.w3.org/2000/svg"
          d="M6.5625 1.75C6.5625 1.23223 6.98223 0.8125 7.5 0.8125H12.5C13.0178 0.8125 13.4375 1.23223 13.4375 1.75V2.6875H18.75C19.2678 2.6875 19.6875 3.10723 19.6875 3.625C19.6875 4.14277 19.2678 4.5625 18.75 4.5625H1.25C0.732233 4.5625 0.3125 4.14277 0.3125 3.625C0.3125 3.10723 0.732233 2.6875 1.25 2.6875H6.5625V1.75Z"
        />
        <path
          xmlns="http://www.w3.org/2000/svg"
          fillRule="evenodd"
          d="M2.79987 7.93098C2.83504 7.61446 3.10258 7.375 3.42105 7.375H16.5789C16.8974 7.375 17.1649 7.61446 17.2001 7.93098L17.4503 10.1827C17.9013 14.2414 17.9013 18.3376 17.4503 22.3963L17.4257 22.618C17.2614 24.0962 16.1158 25.2749 14.6428 25.4811C11.5626 25.9123 8.43737 25.9123 5.35717 25.4811C3.88421 25.2749 2.73856 24.0962 2.57431 22.618L2.54968 22.3963C2.09871 18.3376 2.09871 14.2414 2.54968 10.1827L2.79987 7.93098ZM13.1629 13.5871C13.529 13.9532 13.529 14.5468 13.1629 14.9129L11.3258 16.75L13.1629 18.5871C13.529 18.9532 13.529 19.5468 13.1629 19.9129C12.7968 20.279 12.2032 20.279 11.8371 19.9129L10 18.0758L8.16292 19.9129C7.79681 20.279 7.20321 20.279 6.8371 19.9129C6.47098 19.5468 6.47098 18.9532 6.8371 18.5871L8.67418 16.75L6.83709 14.9129C6.47097 14.5468 6.47097 13.9532 6.83709 13.5871C7.2032 13.221 7.7968 13.221 8.16291 13.5871L10 15.4242L11.8371 13.5871C12.2032 13.221 12.7968 13.221 13.1629 13.5871Z"
          clipRule="evenodd"
        />
      </>
    ),
  },
  edit: {
    width: 23,
    height: 24,
    viewBox: [0, 0, 23, 24],
    fill: getColor(IconVariants.edit),
    data: (
      <>
        <path
          xmlns="http://www.w3.org/2000/svg"
          d="M16.9088 0.754418C17.1113 0.774333 17.1987 1.02868 17.0548 1.17746L7.00138 11.5776C6.88752 11.6954 6.80605 11.8424 6.76536 12.0036L5.55703 16.7891C5.47572 17.1111 5.56554 17.4536 5.79304 17.6889C6.02054 17.9243 6.3516 18.0172 6.66289 17.9331L11.2889 16.6831C11.4447 16.641 11.5868 16.5567 11.7007 16.4389L21.8965 5.89153C22.0396 5.74355 22.2841 5.83209 22.3053 6.04022C22.73 10.2267 22.706 14.4496 22.2332 18.6319C21.9639 21.0132 20.1137 22.883 17.8198 23.1482C13.6534 23.6299 9.34601 23.6299 5.17953 23.1482C2.88563 22.883 1.03544 21.0132 0.766208 18.6319C0.268035 14.2257 0.268035 9.77437 0.766208 5.36812C1.03544 2.9868 2.88563 1.11708 5.17953 0.851862C9.04304 0.405168 13.0277 0.372687 16.9088 0.754418Z"
        />
        <path
          xmlns="http://www.w3.org/2000/svg"
          d="M18.5362 2.29662C18.6542 2.17483 18.8452 2.17482 18.9631 2.29662L20.6721 4.06457C20.7901 4.18661 20.7901 4.38447 20.6721 4.50651L10.6509 14.8733C10.6131 14.9123 10.5652 14.9406 10.5136 14.9547L8.20038 15.5797C7.97727 15.6398 7.77409 15.4291 7.832 15.1983L8.43616 12.8056C8.44973 12.7519 8.47689 12.7028 8.51484 12.6636L18.5362 2.29662Z"
        />
      </>
    ),
  },
  zoom: {
    width: 14,
    height: 10,
    viewBox: [0, 0, 14, 10],
    fill: getColor(IconVariants.zoom),
    data: (
      <path
        xmlns="http://www.w3.org/2000/svg"
        fillRule="evenodd"
        d="M3.21297 1.01953C4.86606 0.874091 6.52959 0.886785 8.18019 1.05743L8.60718 1.10158C9.42216 1.18584 10.0781 1.7941 10.2145 2.58578L12.5179 1.3816C12.674 1.3 12.8613 1.30084 13.0167 1.38384C13.172 1.46685 13.2747 1.62096 13.2901 1.79422L13.3076 1.99046C13.5036 4.19013 13.5036 6.40246 13.3076 8.60214L13.2901 8.79837C13.2747 8.97164 13.172 9.12575 13.0167 9.20875C12.8613 9.29176 12.674 9.2926 12.5179 9.21099L10.2145 8.00681C10.0781 8.7985 9.42216 9.40677 8.60718 9.49103L8.18019 9.53517C6.52959 9.70582 4.86606 9.71852 3.21297 9.57308L2.10159 9.4753C1.26415 9.40162 0.587516 8.7721 0.465888 7.95349C0.204079 6.1914 0.204079 4.40121 0.465888 2.63912C0.587516 1.82051 1.26415 1.19099 2.10159 1.11731L3.21297 1.01953ZM10.3445 6.93248C10.4009 6.94119 10.4567 6.95913 10.51 6.98695L12.3051 7.92544C12.4325 6.17492 12.4325 4.41768 12.3051 2.66716L10.51 3.60564C10.4567 3.63347 10.4009 3.65141 10.3445 3.66012C10.443 4.74875 10.443 5.84385 10.3445 6.93248Z"
        clipRule="evenodd"
      />
    ),
  },
};

const Svg: FC<ISvg> = ({
  icon,
  height: h,
  width: w,
  className = '',
  fill,
  ...attrs
}) => {
  const file = files[icon];

  const width = w || file.width;
  const height = h || file.height;
  const viewBox = file.viewBox ? file.viewBox.join(' ') : '0 0 ' + w + ' ' + h;
  let finaleFill = file.fill;

  if (fill) {
    finaleFill = fill;

    if (file.stroke) {
      file.stroke = fill;
    }
  }

  return (
    <svg
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      version="1.1"
      preserveAspectRatio="xMinYMin"
      width={width}
      height={height}
      viewBox={viewBox}
      fill={finaleFill}
      {...attrs}
    >
      {file.data}
    </svg>
  );
};

export default Svg;
